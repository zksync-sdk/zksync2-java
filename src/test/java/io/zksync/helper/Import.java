package io.zksync.helper;

import java.math.BigInteger;
import java.util.Arrays;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * Auto generated code.
 *
 * <p><strong>Do not modify!</strong>
 *
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the <a
 * href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.1.
 */
@SuppressWarnings("rawtypes")
public class Import extends Contract {
  public static final String BINARY =
      "";
  public static final String FOO_BINARY =
      "0x0002000000000002000100000001035500000060011002700000004e0010019d000000010120018f000000000110004c000000080000c13d013100720000040f013100090000040f00040000000000020000008001000039000000400200003900000000001204350000000001000416000000000110004c000000280000c13d00000000010000190131012f0000040f000000010210018f00000001011002700000007f0310018f000000000420004c000000000301c0190000001f0130008c00000000010000190000000101002039000000010110018f000000000220004c0000000002000019000000010200c039000000010220018f000000000112004b0000002a0000613d000000540100004100000000001004350000002201000039000000040200003900000000001204350000005501000041000001330001043000000000010000190000013300010430000000200130008c0000004a0000413d000200000003001d00000000000004350000004f0100004100008010020000390000000003000415000000040330008a00000020033000c9013101140000040f000000040100035f000000ff02000039000000030220024f000000000220004c000000540000613d000000000201043b00000002010000290000001f0110003900000005011002700000000003120019000000000132004b0000004a0000813d000100000003001d000200000002001d000000000100001900000002020000290131012d0000040f000000010300002900000002020000290000000102200039000000000132004b000000410000413d000000520100004100000000020000190131012d0000040f000000200100003900000100020000390000000000120439000001200100003900000000000104390000005301000041000001320001042e00000060021002700000001f0220018f00000065031002700000005003300197000000000430004c000000620000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b0000005b0000413d000000000420004c000000700000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f00000000002304350000005101100197000001330001043000060000000000020000000001000410000080020210008c0000008d0000613d0000000002000411000080010220008c0000008d0000613d0000005602000041000000000020043900000004020000390000000000120439000000570100004100008002020000390000000003000415000000060330008a00000020033000c9013101140000040f000000ff01000039000000050110024f000000000110004c000000ab0000613d000000060100035f000000000101043b000000000110004c0000008d0000c13d0000000001000019000001320001042e0000000001000031000000030210008c000000a90000a13d0000000102000367000000000202043b0000005802200197000000590220009c000000a90000c13d0000000002000416000000000220004c000000ad0000c13d000000040110008a000000010200008a0000005a03000041000000000221004b000000000200001900000000020320190000005a011001970000005a0410009c00000000030080190000005a011001670000005a0110009c00000000010200190000000001036019000000000110004c000000af0000c13d0000000001000019000001330001043000000000010000190000013300010430000000000100001900000133000104300000000001000019000001330001043000000000010000190131012f0000040f000000010210018f00000001031002700000007f0430018f000000000520004c000000000503001900000000050460190000001f0350008c00000000030000190000000103002039000000010330018f000000000420004c0000000004000019000000010400c039000000010440018f000000000334004b000000c80000613d000000540100004100000000001004350000002201000039000000040200003900000000001204350000005501000041000001330001043000000080040000390000000000540435000000000220004c000000d40000c13d000001000200008a000000000121016f000000a0020000390000000000120435000000000150004c000000c001000039000000a001006039000000ec0000013d000000bf01000039000000a0030000390000000000000435000000000250004c000000f90000613d000100000004001d0000005b030000410000000001000019000200000005001d000400000003001d000300000001001d00000000010300190131012f0000040f000000030400002900000004030000290000000205000029000000a002400039000000000012043500000001033000390000002001400039000000000251004b000000dd0000413d000000c00140003900000001040000290000001f01100039000000200200008a000000000321016f000000800230008a0000005c0220009c000000f90000a13d000000540100004100000000001004350000004101000039000000040200003900000000001204350000005501000041000001330001043000000040020000390000000000320435000000200200003900000000002304350000000002040433000000200430003900000000002404350000004003300039000000000420004c0000010b0000613d00000000040000190000000005430019000000a006400039000000000606043300000000006504350000002004400039000000000524004b000001040000413d0000000003230019000000000003043500000040011002100000005d0110019700000060022002100000005e022000410000005f02200197000000000112019f000001320001042e0002000000000002000200000003001d0000002003300039000100000003001d00000123002104230000000203000029000000200230011a00000000020103550000005a010000410000000102000029000000200220011a00000000021201bd00000000010300190000000200000005000000000001042d0000000203000029000000200230011a000000000201035500000060010000410000000102000029000000200220011a000000000212018d00000000010300190000000200000005000000000001042d000000000012041b000000000001042d000000000101041a000000000001042d0000013100000432000001320001042e0000013300010430000000000000000100000000000000010000000000000001000000000000000100000000000000000000000000000000000000000000000000000000ffffffff020000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000007ffffffffffffff00000000000000000000000000000000ffffffff000000000000000000000000466f6f000000000000000000000000000000000000000000000000000000000600000002000000000000000000000000000000400000010000000000000000004e487b710000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000240000000000000000000000001806aa1896bbf26568e884a7374b41e002500962caba6a15023a8d90e8508b830200020000000000000000000000000000000024000000000000000000000000ffffffff0000000000000000000000000000000000000000000000000000000006fdde03000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563000000000000000000000000000000000000000000000000ffffffffffffff7f0000000000000000000000000000000000000000ffffffe00000000000000000000000000000000000000000000000000000005f00000000000000000000000000000000000000000000000000000000ffffffe00000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff";
  public static final String FUNC_FOO = "foo";

  public static final String FUNC_GETFOONAME = "getFooName";

  @Deprecated
  protected Import(
      String contractAddress,
      Web3j web3j,
      Credentials credentials,
      BigInteger gasPrice,
      BigInteger gasLimit) {
    super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
  }

  protected Import(
      String contractAddress,
      Web3j web3j,
      Credentials credentials,
      ContractGasProvider contractGasProvider) {
    super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
  }

  @Deprecated
  protected Import(
      String contractAddress,
      Web3j web3j,
      TransactionManager transactionManager,
      BigInteger gasPrice,
      BigInteger gasLimit) {
    super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
  }

  protected Import(
      String contractAddress,
      Web3j web3j,
      TransactionManager transactionManager,
      ContractGasProvider contractGasProvider) {
    super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
  }

  public RemoteFunctionCall<String> foo() {
    final Function function =
        new Function(
            FUNC_FOO,
            Arrays.<Type>asList(),
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
    return executeRemoteCallSingleValueReturn(function, String.class);
  }

  public RemoteFunctionCall<String> getFooName() {
    final Function function =
        new Function(
            FUNC_GETFOONAME,
            Arrays.<Type>asList(),
            Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
    return executeRemoteCallSingleValueReturn(function, String.class);
  }

  public static Function encodeGetFooName() {
    return new Function(
        FUNC_GETFOONAME,
        Arrays.<Type>asList(),
        Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
  }

  @Deprecated
  public static Import load(
      String contractAddress,
      Web3j web3j,
      Credentials credentials,
      BigInteger gasPrice,
      BigInteger gasLimit) {
    return new Import(contractAddress, web3j, credentials, gasPrice, gasLimit);
  }

  @Deprecated
  public static Import load(
      String contractAddress,
      Web3j web3j,
      TransactionManager transactionManager,
      BigInteger gasPrice,
      BigInteger gasLimit) {
    return new Import(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
  }

  public static Import load(
      String contractAddress,
      Web3j web3j,
      Credentials credentials,
      ContractGasProvider contractGasProvider) {
    return new Import(contractAddress, web3j, credentials, contractGasProvider);
  }

  public static Import load(
      String contractAddress,
      Web3j web3j,
      TransactionManager transactionManager,
      ContractGasProvider contractGasProvider) {
    return new Import(contractAddress, web3j, transactionManager, contractGasProvider);
  }

  public static RemoteCall<Import> deploy(
      Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
    return deployRemoteCall(Import.class, web3j, credentials, contractGasProvider, BINARY, "");
  }

  @Deprecated
  public static RemoteCall<Import> deploy(
      Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
    return deployRemoteCall(Import.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
  }

  public static RemoteCall<Import> deploy(
      Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
    return deployRemoteCall(
        Import.class, web3j, transactionManager, contractGasProvider, BINARY, "");
  }

  @Deprecated
  public static RemoteCall<Import> deploy(
      Web3j web3j,
      TransactionManager transactionManager,
      BigInteger gasPrice,
      BigInteger gasLimit) {
    return deployRemoteCall(
        Import.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
  }
}
