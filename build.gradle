plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'io.github.gradle-nexus.publish-plugin' version '1.3.0'
    id "com.diffplug.spotless" version "6.23.3"
}

group = 'io.zksync'
version = System.getenv('VERSION')
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'zksync2'
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'ZkSync2 SDK'
                description = 'This repository provides a Java SDK for zkSync developers, which can be used either on PC or Android.'
                url = 'https://github.com/zksync-sdk/zksync2-java'
                organization {
                    name = 'Matter Labs'
                    url = 'https://matter-labs.io'
                }
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://www.mit.edu/~amini/LICENSE.md'
                    }
                }
                developers {
                    developer {
                        id = 'matterLabs'
                        name = 'Matter Labs'
                        email = 'hello@matterlabs.io'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/zksync-sdk/zksync2-java'
                    url = 'https://github.com/zksync-sdk/zksync2-java'
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username findProperty("sonatypeUsername")
                password findProperty("sonatypePassword")
            }
        }
    }
}

signing {
    def signingKeyId = findProperty("signingKeyId")
    def signingKey = findProperty("signingKey")
    def signingPassword = findProperty("signingPassword")
    useInMemoryPgpKeys(signingKeyId, signingKey, signingPassword)
    sign publishing.publications.mavenJava
}

nexusPublishing {
    repositories {
        sonatype {
            username = findProperty("sonatypeUsername")
            password = findProperty("sonatypePassword")
            stagingProfileId = findProperty("stagingProfileId")
         }
    }
}

dependencies {

    // === Code Generation ===
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    // === Utils ===
    implementation 'org.apache.commons:commons-lang3:3.12.0'

    // === Web3 client ===
    implementation 'org.web3j:core:4.9.7'

    // === Web3 abi ===
    implementation 'org.web3j:abi:4.9.7'

    // === For Eth Signing ===
    implementation 'org.web3j:crypto:4.9.7'

    // === Test dependencies ===
    testImplementation 'org.mockito:mockito-inline:4.7.0'
    testImplementation(platform('org.junit:junit-bom:5.9.0'))
    testImplementation('org.junit.jupiter:junit-jupiter')
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

spotless {
    java {
        googleJavaFormat()
        target '**/*.java' // Targeting all Java files
    }
}
